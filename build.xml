<?xml version="1.0" encoding="UTF-8"?>
<project name="opus4framework" default="build">

    <property environment="env" />
    <property name="configfile" location="${basedir}/../opus-config.properties" />
    <property name="libsdir" value="/home/opus4ci/libs" />
    <property name="testpath" value="" />
    <property name="codingstandard" location="${basedir}/vendor/opus4-repo/codesniffer/ruleset.xml" />
    <property name="bindir" value="${basedir}/vendor/bin" />
    <property name="solrVersion" value="7.6.0" />
    <property name="downloadDir" value="${basedir}/downloads" />
    <property name="workspaceDir" value="${basedir}/build/workspace" />

    <!-- Properties for configuration files (tests/config.ini) used for testing. -->
    <property name="dbName" value="opusdb" />
    <property name="dbUserName" value="opus4" />
    <property name="dbUserPassword" value="" />
    <property name="dbAdminName" value="opus4admin" />
    <property name="dbAdminPassword" value="" />

    <target name="analyse-code" depends="phpcs,phpmd,phpcpd,phploc" />

    <target name="build" depends="prepare,lint,analyse-code,pdepend,phpdoc,phpcb" />

    <target name="clean" depends="delete-build, clean-workspace, prepare-workspace">
    </target>

    <target name="delete-build">
        <delete dir="${basedir}/build" />
    </target>

    <target name="clean-workspace">
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${workspaceDir}/cache" includes="**/*" />
        </delete>
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${workspaceDir}/tmp" includes="**/*" />
        </delete>
        <delete includeEmptyDirs="true" failonerror="false">
            <fileset dir="${workspaceDir}" />
        </delete>
    </target>

    <target name="prepare-workspace">
        <mkdir dir="${workspaceDir}/cache" />
        <mkdir dir="${workspaceDir}/tmp" />
        <mkdir dir="${workspaceDir}/log" />
        <mkdir dir="${workspaceDir}/files" />
    </target>

    <target name="setup" depends="prepare-dependencies,prepare-workspace,prepare-config"
            description="Prepares the configuration." />

    <target name="prepare-config">
        <copy file="${basedir}/tests/config.ini.template" toFile="${basedir}/tests/config.ini" filtering="true"
                overwrite="true">
            <filterset>
                <filter token="db.user.name" value="${dbUserName}" />
                <filter token="db.user.password" value="${dbUserPassword}" />
                <filter token="db.admin.name" value="${dbAdminName}" />
                <filter token="db.admin.password" value="${dbAdminPassword}" />
                <filter token="db.name" value="${dbName}" />
            </filterset>
        </copy>
    </target>

    <target name="prepare-dependencies">
        <exec executable="${basedir}/bin/install-composer.sh" dir="${basedir}" failonerror="on" />
    </target>

    <target name="prepare" depends="clean,prepare-workspace,prepare-dependencies">
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/pdepend" />
        <mkdir dir="${basedir}/build/code-browser" />
    </target>

    <target name="lint">
        <apply executable="php" dir="${basedir}" failonerror="on" logerror="on">
            <arg line="-l"/>
            <fileset dir="${basedir}" followsymlinks="false">
                <include name="**/*.php"/>
                <modified />
                <exclude name="vendor/**"/>
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using 'phploc'.">
        <exec executable="${bindir}/phploc" dir="${basedir}">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg value="./library" />
        </exec>
    </target>

    <target name="phpdoc">
        <exec executable="${bindir}/phpdoc" dir="${basedir}" logerror="on">
            <arg value="--directory" />
            <arg path="${basedir}/library" />
            <arg value="--target" />
            <arg path="${basedir}/build/api" />
        </exec>
    </target>

    <target name="phpcs">
        <echo message="Coding Standard = '${codingstandard}'" />
        <exec executable="${bindir}/phpcs" dir="${basedir}" output="${basedir}/build/logs/checkstyle.xml"
              error="${basedir}/build/logs/checkstyle.error.log">
            <arg value="--report=checkstyle" />
            <arg value="--standard=${codingstandard}" />
            <arg path="${basedir}/library" />
        </exec>
    </target>

    <target name="phpmd">
        <exec executable="${bindir}/phpmd" dir="${basedir}" logerror="on" output="${basedir}/build/logs/pmd.xml" >
            <arg line="library" />
            <arg line="xml" />
            <arg line="codesize,unusedcode,naming,design" />
        </exec>
    </target>

    <target name="phpcpd">
        <exec executable="${bindir}/phpcpd" dir="${basedir}" logerror="on" >
            <arg line="--min-lines 3" />
            <arg line="--min-tokens 30" />
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml" />
            <arg line="./library" />
        </exec>
    </target>

    <target name="pdepend"  description="Generates software metrics charts.">
        <exec executable="${bindir}/pdepend" dir="${basedir}" logerror="on">
            <arg value="--coverage-report=${basedir}/build/logs/phpunit.coverage.xml" />
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg value="--suffix=php,phtml" />
            <arg value="--coderank-mode=inheritance,property,method" />
            <arg value="--ignore=tests" />
            <arg value="${basedir}/library" />
        </exec>
    </target>

    <target name="phpcb" description="Aggregates tool output with PHP_CodeBrowser.">
        <exec executable="${bindir}/phpcb">
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}/library" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>

    <target name="create-database">
        <exec executable="php" dir="${basedir}/db" failonerror="on">
            <arg line="createdb.php" />
        </exec>
    </target>

    <target name="download-solr">
        <mkdir dir="${downloadDir}" />
        <get src="https://archive.apache.org/dist/lucene/solr/${solrVersion}/solr-${solrVersion}.tgz"
             dest="${downloadDir}/solr-${solrVersion}.tgz"
             skipexisting="true" />
        <exec executable="tar" dir="${downloadDir}">
            <arg line="xfz" />
            <arg line="solr-${solrVersion}.tgz" />
            <arg line="-C ${basedir}" />
        </exec>
    </target>

</project>

